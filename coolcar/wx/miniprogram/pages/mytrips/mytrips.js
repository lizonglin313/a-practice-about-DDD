"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const profile_1 = require("../../service/profile");
const rental_pb_1 = require("../../service/proto_gen/rental/rental_pb");
const trip_1 = require("../../service/trip");
const format_1 = require("../../utils/format");
const routing_1 = require("../../utils/routing");
const tripStatusMap = new Map([
    [rental_pb_1.rental.v1.TripStatus.IN_PROGRESS, '进行中'],
    [rental_pb_1.rental.v1.TripStatus.FINISHED, '已完成'],
]);
const licStatusMap = new Map([
    [rental_pb_1.rental.v1.IdentityStatus.UNSUBMITTED, '未认证'],
    [rental_pb_1.rental.v1.IdentityStatus.PENDING, '未认证'],
    [rental_pb_1.rental.v1.IdentityStatus.VERIFIED, '已认证'],
]);
Page({
    scrollStates: {
        mainItems: [],
    },
    layoutReslover: undefined,
    data: {
        indicatorDots: true,
        vertical: false,
        autoplay: true,
        interval: 3000,
        duration: 500,
        circular: true,
        current: '0',
        promotionItems: [
            {
                img: 'https://img3.mukewang.com/620c5c810001d1f417920764.jpg',
                promotionID: '1',
            },
            {
                img: 'https://img2.mukewang.com/6216fef5000134df17920764.jpg',
                promotionID: '2',
            },
            {
                img: 'https://img4.mukewang.com/62184a9e00011dbd17920764.jpg',
                promotionID: '3',
            },
            {
                img: 'https://img3.mukewang.com/62187adc0001030417920764.jpg',
                promotionID: '4',
            },
            {
                img: 'https://img.mukewang.com/6218389d0001e43e17920764.jpg',
                promotionID: '5',
            },
        ],
        licStatus: licStatusMap.get(rental_pb_1.rental.v1.IdentityStatus.UNSUBMITTED),
        avatarURL: '',
        tripsHeight: 0,
        mainItems: [],
        navItems: [],
        navCount: 0,
        mainScroll: '',
        navSel: '',
        navScroll: '',
    },
    onLoad() {
        const layoutReady = new Promise((resolve) => {
            this.layoutReslover = resolve;
        });
        Promise.all([trip_1.TripService.getTrips(), layoutReady]).then(([trips]) => {
            this.populateTrips(trips.trips);
        });
        getApp().globalData.userInfo.then(userInfo => {
            this.setData({
                avatarURL: userInfo.avatarUrl,
            });
        });
    },
    onShow() {
        profile_1.ProfileService.getProfile().then(p => {
            this.setData({
                licStatus: licStatusMap.get(p.identityStatus || 0),
            });
        });
    },
    onReady() {
        wx.createSelectorQuery().select('#heading')
            .boundingClientRect(rect => {
            const height = wx.getSystemInfoSync().windowHeight - rect.height;
            this.setData({
                tripsHeight: height,
                navCount: Math.round(height / 50),
            }, () => {
                if (this.layoutReslover) {
                    this.layoutReslover(1);
                }
            });
        }).exec();
    },
    populateTrips(trips) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const mainItems = [];
        const navItems = [];
        let navSel = '';
        let prevNav = '';
        for (let i = 0; i < trips.length; i++) {
            const trip = trips[i];
            const mainId = 'main-' + i;
            const navId = 'nav-' + i;
            const shortId = (_a = trip.id) === null || _a === void 0 ? void 0 : _a.substring(trip.id.length - 6);
            if (!prevNav) {
                prevNav = navId;
            }
            const tripData = {
                id: trip.id,
                shortId: '****' + shortId,
                start: ((_c = (_b = trip.trip) === null || _b === void 0 ? void 0 : _b.start) === null || _c === void 0 ? void 0 : _c.poiName) || '未知',
                end: '',
                distance: '',
                duration: '',
                fee: '',
                status: tripStatusMap.get((_d = trip.trip) === null || _d === void 0 ? void 0 : _d.status) || '未知',
            };
            const end = (_e = trip.trip) === null || _e === void 0 ? void 0 : _e.end;
            if (end) {
                tripData.end = end.poiName || '未知';
                tripData.distance = ((_f = end.kmDriven) === null || _f === void 0 ? void 0 : _f.toFixed(1)) + '公里';
                tripData.fee = format_1.formatFee(end.feeCent || 0);
                const dur = format_1.formatDuration((end.timestampSec || 0) - (((_h = (_g = trip.trip) === null || _g === void 0 ? void 0 : _g.start) === null || _h === void 0 ? void 0 : _h.timestampSec) || 0));
                tripData.duration = `${dur.hh}时${dur.mm}分`;
            }
            mainItems.push({
                id: mainId,
                navId: navId,
                navScrollId: prevNav,
                data: tripData,
            });
            navItems.push({
                id: navId,
                mainId: mainId,
                label: shortId || '',
            });
            if (i === 0) {
                navSel = navId;
            }
            prevNav = navId;
        }
        console.log('nav count:', this.data.navCount);
        for (let i = 0; i < this.data.navCount - 1; i++) {
            navItems.push({
                id: '',
                mainId: '',
                label: '',
            });
        }
        this.setData({
            mainItems: mainItems,
            navItems: navItems,
            navSel: navSel,
        }, () => {
            this.prepareScrollStates();
        });
    },
    prepareScrollStates() {
        wx.createSelectorQuery().selectAll('.main-item')
            .fields({
            id: true,
            dataset: true,
            rect: true
        }).exec(res => {
            this.scrollStates.mainItems = res[0];
        });
    },
    onSwiperChange(e) {
    },
    onPromotionItemTap(e) {
    },
    onRegisterTap() {
        wx.navigateTo({
            url: routing_1.routing.register(),
        });
    },
    onGetUserInfo(e) {
        const userInfo = e.detail.userInfo;
        if (userInfo) {
            getApp().resolveUserInfo(userInfo);
            this.setData({
                avatarURL: userInfo.avatarUrl,
            });
        }
    },
    onNavItemTap(e) {
        var _a, _b, _c;
        const mainId = (_b = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.dataset) === null || _b === void 0 ? void 0 : _b.mainId;
        const navId = (_c = e.currentTarget) === null || _c === void 0 ? void 0 : _c.id;
        if (mainId) {
            this.setData({
                mainScroll: mainId,
                navSel: navId,
            });
        }
    },
    onMainScroll(e) {
        var _a, _b;
        const top = ((_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.offsetTop) + ((_b = e.detail) === null || _b === void 0 ? void 0 : _b.scrollTop);
        if (top === undefined) {
            return;
        }
        const selItem = this.scrollStates.mainItems.find(v => v.top >= top);
        if (!selItem) {
            return;
        }
        this.setData({
            navSel: selItem.dataset.navId,
            navScroll: selItem.dataset.navScrollId,
        });
    }
});
//# sourceMappingURL=data:application/json;base64,