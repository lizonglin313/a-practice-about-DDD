"use strict";
const centPerSec = 0.7;
Page({
    timer: undefined,
    data: {
        location: {
            latitude: 32.92,
            longitude: 118.46,
        },
        scale: 14,
        elapsed: '00:00:00',
        fee: '0.00',
    },
    onLoad(opt) {
        console.log('current trip', opt.trip_id);
        this.setupLocationUpdator();
        this.setupTimer();
    },
    onUnload() {
        wx.stopLocationUpdate();
        if (this.timer) {
            clearInterval(this.timer);
        }
    },
    setupLocationUpdator() {
        wx.startLocationUpdate({
            fail: console.error,
        }),
            wx.onLocationChange(loc => {
                console.log('location: ', loc);
                this.setData({
                    location: {
                        latitude: loc.latitude,
                        longitude: loc.longitude,
                    },
                });
            });
    },
    setupTimer() {
        let elapsedSec = 0;
        let cents = 0;
        this.timer = setInterval(() => {
            elapsedSec++;
            cents += centPerSec;
            this.setData({
                elapsed: formatDuration(elapsedSec),
                fee: formatFee(cents)
            });
        }, 1000);
    }
});
function formatDuration(sec) {
    const padString = (n) => n < 10 ? '0' + n.toFixed(0) : n.toFixed(0);
    const h = Math.floor(sec / 3600);
    sec -= 3600 * h;
    const m = Math.floor(sec / 60);
    sec -= 60 * m;
    const s = Math.floor(sec);
    return `${padString(h)}:${padString(m)}:${padString(s)}`;
}
function formatFee(cents) {
    return (cents / 100).toFixed(2);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJpdmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRyaXZpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQTtBQUV0QixJQUFJLENBQUM7SUFDRCxLQUFLLEVBQUUsU0FBK0I7SUFDdEMsSUFBSSxFQUFFO1FBQ0YsUUFBUSxFQUFFO1lBQ04sUUFBUSxFQUFFLEtBQUs7WUFDZixTQUFTLEVBQUUsTUFBTTtTQUNwQjtRQUNELEtBQUssRUFBRSxFQUFFO1FBQ1QsT0FBTyxFQUFFLFVBQVU7UUFDbkIsR0FBRyxFQUFFLE1BQU07S0FDZDtJQUVELE1BQU0sQ0FBQyxHQUFHO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ3hDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO1FBQzNCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUNyQixDQUFDO0lBRUQsUUFBUTtRQUNKLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxDQUFBO1FBQ3ZCLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNaLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7U0FDNUI7SUFDTCxDQUFDO0lBRUQsb0JBQW9CO1FBQ2hCLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztZQUNuQixJQUFJLEVBQUUsT0FBTyxDQUFDLEtBQUs7U0FDdEIsQ0FBQztZQUNGLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBRSxHQUFHLENBQUMsRUFBRTtnQkFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLENBQUE7Z0JBQzlCLElBQUksQ0FBQyxPQUFPLENBQUM7b0JBQ1QsUUFBUSxFQUFFO3dCQUNOLFFBQVEsRUFBRSxHQUFHLENBQUMsUUFBUTt3QkFDdEIsU0FBUyxFQUFFLEdBQUcsQ0FBQyxTQUFTO3FCQUMzQjtpQkFDSixDQUFDLENBQUE7WUFDTixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFDRCxVQUFVO1FBQ04sSUFBSSxVQUFVLEdBQUcsQ0FBQyxDQUFBO1FBQ2xCLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQTtRQUNiLElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLEdBQUcsRUFBRTtZQUMxQixVQUFVLEVBQUUsQ0FBQTtZQUNaLEtBQUssSUFBSSxVQUFVLENBQUE7WUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDVCxPQUFPLEVBQUUsY0FBYyxDQUFDLFVBQVUsQ0FBQztnQkFDbkMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxLQUFLLENBQUM7YUFDeEIsQ0FBQyxDQUFBO1FBQ04sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ1osQ0FBQztDQUNKLENBQUMsQ0FBQTtBQUdGLFNBQVMsY0FBYyxDQUFDLEdBQVc7SUFDL0IsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUM1QixDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUU5QyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBQyxJQUFJLENBQUMsQ0FBQTtJQUM5QixHQUFHLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQTtJQUNmLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFDLEVBQUUsQ0FBQyxDQUFBO0lBQzVCLEdBQUcsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFBO0lBQ2IsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUN6QixPQUFPLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQTtBQUM1RCxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsS0FBYTtJQUM1QixPQUFPLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUNuQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2VudFBlclNlYyA9IDAuN1xyXG5cclxuUGFnZSh7XHJcbiAgICB0aW1lcjogdW5kZWZpbmVkIGFzIG51bWJlciB8IHVuZGVmaW5lZCxcclxuICAgIGRhdGE6IHtcclxuICAgICAgICBsb2NhdGlvbjoge1xyXG4gICAgICAgICAgICBsYXRpdHVkZTogMzIuOTIsXHJcbiAgICAgICAgICAgIGxvbmdpdHVkZTogMTE4LjQ2LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2NhbGU6IDE0LFxyXG4gICAgICAgIGVsYXBzZWQ6ICcwMDowMDowMCcsXHJcbiAgICAgICAgZmVlOiAnMC4wMCcsXHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZChvcHQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnY3VycmVudCB0cmlwJywgb3B0LnRyaXBfaWQpXHJcbiAgICAgICAgdGhpcy5zZXR1cExvY2F0aW9uVXBkYXRvcigpXHJcbiAgICAgICAgdGhpcy5zZXR1cFRpbWVyKClcclxuICAgIH0sIFxyXG5cclxuICAgIG9uVW5sb2FkKCkge1xyXG4gICAgICAgIHd4LnN0b3BMb2NhdGlvblVwZGF0ZSgpXHJcbiAgICAgICAgaWYgKHRoaXMudGltZXIpIHtcclxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgc2V0dXBMb2NhdGlvblVwZGF0b3IoKSB7XHJcbiAgICAgICAgd3guc3RhcnRMb2NhdGlvblVwZGF0ZSh7XHJcbiAgICAgICAgICAgIGZhaWw6IGNvbnNvbGUuZXJyb3IsXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgd3gub25Mb2NhdGlvbkNoYW5nZSggbG9jID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2xvY2F0aW9uOiAnLCBsb2MpXHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgIGxhdGl0dWRlOiBsb2MubGF0aXR1ZGUsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9uZ2l0dWRlOiBsb2MubG9uZ2l0dWRlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHNldHVwVGltZXIoKSB7XHJcbiAgICAgICAgbGV0IGVsYXBzZWRTZWMgPSAwXHJcbiAgICAgICAgbGV0IGNlbnRzID0gMFxyXG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGVsYXBzZWRTZWMrK1xyXG4gICAgICAgICAgICBjZW50cyArPSBjZW50UGVyU2VjXHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgICAgICBlbGFwc2VkOiBmb3JtYXREdXJhdGlvbihlbGFwc2VkU2VjKSxcclxuICAgICAgICAgICAgICAgIGZlZTogZm9ybWF0RmVlKGNlbnRzKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0sIDEwMDApXHJcbiAgICB9XHJcbn0pXHJcblxyXG5cclxuZnVuY3Rpb24gZm9ybWF0RHVyYXRpb24oc2VjOiBudW1iZXIpIHtcclxuICAgIGNvbnN0IHBhZFN0cmluZyA9IChuOiBudW1iZXIpID0+IFxyXG4gICAgICAgIG4gPCAxMCA/ICcwJyArIG4udG9GaXhlZCgwKSA6IG4udG9GaXhlZCgwKVxyXG4gICAgXHJcbiAgICBjb25zdCBoID0gTWF0aC5mbG9vcihzZWMvMzYwMClcclxuICAgIHNlYyAtPSAzNjAwICogaFxyXG4gICAgY29uc3QgbSA9IE1hdGguZmxvb3Ioc2VjLzYwKVxyXG4gICAgc2VjIC09IDYwICogbVxyXG4gICAgY29uc3QgcyA9IE1hdGguZmxvb3Ioc2VjKVxyXG4gICAgcmV0dXJuIGAke3BhZFN0cmluZyhoKX06JHtwYWRTdHJpbmcobSl9OiR7cGFkU3RyaW5nKHMpfWBcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybWF0RmVlKGNlbnRzOiBudW1iZXIpIHtcclxuICAgIHJldHVybiAoY2VudHMgLyAxMDApLnRvRml4ZWQoMilcclxufSJdfQ==